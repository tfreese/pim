plugins {
    id "java-library"
    id "org.springframework.boot"
    id "org.openjfx.javafxplugin"
}

description = "GUI for PIM"

// For JavaFx native-Library Downloads.
configurations.matching { it.canBeResolved }.configureEach {
    attributes {
        attribute(Usage.USAGE_ATTRIBUTE, objects.named(Usage, Usage.JAVA_RUNTIME))
        attribute(OperatingSystemFamily.OPERATING_SYSTEM_ATTRIBUTE, objects.named(OperatingSystemFamily, OperatingSystemFamily.LINUX))
        attribute(MachineArchitecture.ARCHITECTURE_ATTRIBUTE, objects.named(MachineArchitecture, MachineArchitecture.X86_64))
    }
}

javafx {
    version = "$version_javafx"
    modules = ["javafx.controls", "javafx.fxml", "javafx.web"]
    configuration = "implementation"
    // platform = "linux" // linux, windows, mac
    // sdk = "PATH"
}

dependencies {
    implementation(project(":pim-core"))
    implementation(project(":pim-server"))
}

test {
    enabled = false
}

// Start: gradle bootRun --args="--spring.profiles.active=dev"
// The archive name. If the name has not been explicitly set, the pattern for the name is:
// [archiveBaseName]-[archiveAppendix]-[archiveVersion]-[archiveClassifier].[archiveExtension]
// archiveFileName = "test2-boot.jar"
springBoot {
    mainClass = "de.freese.pim.gui.PimClientLauncher"
}

// gradle bootRun --args="--spring.profiles.active=ClientStandalone"
bootRun {
    args = [
            "--spring.profiles.active=ClientRest"
    ]
}

// For Placeholder in application.properties/application.yml
ext.artifactId = project.name

processResources {
    filesMatching("application-ClientEmbeddedServer.properties") {
        filteringCharset = "UTF-8"

        /// During Problems escape Placeholder: \${...}
        expand(project.properties)
    }
}
