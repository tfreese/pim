DROP TABLE IF EXISTS MAILACCOUNT CASCADE;
DROP TABLE IF EXISTS MAIL CASCADE;
DROP SEQUENCE IF EXISTS MAIL_SEQ;

CREATE SEQUENCE MAIL_SEQ START WITH 1 INCREMENT BY 1;

CREATE TABLE MAILACCOUNT
(
    ID                  BIGINT NOT NULL,
	USER_ID				VARCHAR (50) NOT NULL,
	MAIL				VARCHAR (50) NOT NULL,
	PASSWORT			VARCHAR (100) NOT NULL,
	IMAP_HOST			VARCHAR (50) NOT NULL,
	IMAP_PORT			INTEGER DEFAULT 993 NOT NULL,
	IMAP_LEGITIMATION   BOOLEAN DEFAULT TRUE NOT NULL,
	SMTP_HOST			VARCHAR (50) NOT NULL,
	SMTP_PORT			INTEGER DEFAULT 587 NOT NULL,
	SMTP_LEGITIMATION	BOOLEAN DEFAULT TRUE NOT NULL
);
ALTER TABLE MAILACCOUNT ADD CONSTRAINT MAILACCOUNT_PK PRIMARY KEY (ID);
CREATE INDEX MAILACCOUNT_IDX_ID ON MAILACCOUNT (ID);
CREATE INDEX MAILACCOUNT_IDX_USERID ON MAILACCOUNT (USER_ID);
CREATE UNIQUE INDEX MAILACCOUNT_UNQ ON MAILACCOUNT (USER_ID, MAIL);
ALTER TABLE MAILACCOUNT ADD CONSTRAINT MAILACCOUNT_CK_IMAP_HOST CHECK(LENGTH(TRIM(IMAP_HOST)) > 0);
ALTER TABLE MAILACCOUNT ADD CONSTRAINT MAILACCOUNT_CK_IMAP_PORT CHECK(IMAP_PORT > 0);
ALTER TABLE MAILACCOUNT ADD CONSTRAINT MAILACCOUNT_CK_SMTP_HOST CHECK(LENGTH(TRIM(SMTP_HOST)) > 0);
ALTER TABLE MAILACCOUNT ADD CONSTRAINT MAILACCOUNT_CK_SMTP_PORT CHECK(SMTP_PORT > 0);
COMMENT ON TABLE MAILACCOUNT IS 'Tabelle für MailAccounts';
COMMENT ON COLUMN MAILACCOUNT.USER_ID IS 'Eigentümer';
COMMENT ON COLUMN MAILACCOUNT.ID IS 'Primary Key';
COMMENT ON COLUMN MAILACCOUNT.MAIL IS 'Account';
COMMENT ON COLUMN MAILACCOUNT.PASSWORT IS 'Passwort';
COMMENT ON COLUMN MAILACCOUNT.IMAP_HOST IS 'IMAP Host';
COMMENT ON COLUMN MAILACCOUNT.IMAP_PORT IS 'IMAP Port';
COMMENT ON COLUMN MAILACCOUNT.IMAP_LEGITIMATION IS 'IMAP Legitimation';
COMMENT ON COLUMN MAILACCOUNT.SMTP_HOST IS 'SMTP Host';
COMMENT ON COLUMN MAILACCOUNT.SMTP_PORT IS 'SMTP Port';
COMMENT ON COLUMN MAILACCOUNT.SMTP_LEGITIMATION IS 'SMTP Legitimation';

CREATE TABLE MAILFOLDER
(
    ID              BIGINT NOT NULL,
    ACCOUNT_ID      BIGINT NOT NULL,
    FULLNAME        VARCHAR (100) NOT NULL,
    NAME            VARCHAR (100) NOT NULL,
    ABONNIERT       BOOLEAN DEFAULT TRUE NOT NULL,
);
ALTER TABLE MAILFOLDER ADD CONSTRAINT MAILFOLDER_PK PRIMARY KEY (ID);
CREATE INDEX MAILFOLDER_IDX_ID ON MAILFOLDER (ID);
ALTER TABLE MAILFOLDER ADD CONSTRAINT MAILFOLDER_FK FOREIGN KEY (ACCOUNT_ID) REFERENCES MAILACCOUNT (ID);
CREATE INDEX MAILFOLDER_IDX_ACCOUNTID ON MAILFOLDER (ACCOUNT_ID);
CREATE UNIQUE INDEX MAILFOLDER_UNQ ON MAILFOLDER (ACCOUNT_ID, FULLNAME);
ALTER TABLE MAILFOLDER ADD CONSTRAINT MAILFOLDER_CK_FULLNAME CHECK(LENGTH(TRIM(FULLNAME)) > 0);
ALTER TABLE MAILFOLDER ADD CONSTRAINT MAILFOLDER_CK_NAME CHECK(LENGTH(TRIM(NAME)) > 0);
COMMENT ON TABLE MAILFOLDER IS 'Tabelle für MailFolder';
COMMENT ON COLUMN MAILFOLDER.ID IS 'Primary Key';
COMMENT ON COLUMN MAILFOLDER.ACCOUNT_ID IS 'ID des Accounts';
COMMENT ON COLUMN MAILFOLDER.FULLNAME IS 'Hierarchischer Name';
COMMENT ON COLUMN MAILFOLDER.NAME IS 'Einfacher Name';
COMMENT ON COLUMN MAILFOLDER.ABONNIERT IS 'Wenn TRUE wird der Folder auf neue Mails geprüft';

CREATE TABLE MAIL
(
	FOLDER_ID		BIGINT NOT NULL,
    UID             BIGINT NOT NULL,	
	MSG_NUM         INTEGER NOT NULL,
	SENDER			VARCHAR (100) NOT NULL,
	RECIPIENT		VARCHAR (100) NOT NULL,
	RECEIVED_DATE   TIMESTAMP,
	SEND_DATE		TIMESTAMP,
	SUBJECT         VARCHAR (300) NOT NULL,
	SIZE            INTEGER NOT NULL,
	SEEN			BOOLEAN DEFAULT FALSE NOT NULL
);
ALTER TABLE MAIL ADD CONSTRAINT MAIL_FK FOREIGN KEY (FOLDER_ID) REFERENCES MAILFOLDER (ID);
CREATE INDEX MAIL_IDX_FOLDERID ON MAIL (FOLDER_ID);
CREATE UNIQUE INDEX MAIL_UNQ ON MAIL (FOLDER_ID, UID);
ALTER TABLE MAIL ADD CONSTRAINT MAIL_CK_MSG_NUM CHECK(MSG_NUM > 0);
ALTER TABLE MAIL ADD CONSTRAINT MAIL_CK_UID CHECK(UID > 0);
ALTER TABLE MAIL ADD CONSTRAINT MAIL_CK_SIZE CHECK(SIZE > 0);
ALTER TABLE MAIL ADD CONSTRAINT MAIL_CK_SUBJECT CHECK(LENGTH(TRIM(SUBJECT)) > 0);
COMMENT ON TABLE MAIL IS 'Tabelle für Mails';
COMMENT ON COLUMN MAIL.FOLDER_ID IS 'Folder';
COMMENT ON COLUMN MAIL.MSG_NUM IS 'Message-Nummer der Mail im Folder';
COMMENT ON COLUMN MAIL.UID IS 'UID';
COMMENT ON COLUMN MAIL.SENDER IS 'Absender: leer bei gesendeten Mails';
COMMENT ON COLUMN MAIL.RECIPIENT IS 'Empfänger: leer bei empfangenen Mails';
COMMENT ON COLUMN MAIL.RECEIVED_DATE IS 'Empfangsdatum: leer bei gesendeten Mails';
COMMENT ON COLUMN MAIL.SEND_DATE IS 'Sendedatum: leer bei empfangenen Mails';
COMMENT ON COLUMN MAIL.SUBJECT IS 'Betreff';
COMMENT ON COLUMN MAIL.SIZE IS 'Größe in Bytes';
COMMENT ON COLUMN MAIL.SEEN IS 'SEEN-Flag';

